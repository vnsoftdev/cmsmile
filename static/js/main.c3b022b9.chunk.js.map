{"version":3,"sources":["assets/images/1.png","assets/images/2.png","assets/images/3.png","assets/images/4.png","assets/images/5.png","serviceWorker.js","constants/ActionTypes.js","reducers/UserData.js","reducers/Spinner.js","reducers/Reducers.js","configureStore.js","components/header/header.js","apis/routes.js","constants/Variable.js","apis/services.js","apis/api.js","actions/Actions.js","actions/UserAction.js","pages/home/home.js","components/textInput/textInput.js","pages/login/login.js","pages/qrCodeReader/qrCodeReader.js","components/spinner.js","index.js","assets/images/comay_logo.png"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ActionTypes","SET_USER_DATA","SET_STATUS_LOGGED","TOGGLE_SPINNER","userData","state","arguments","length","undefined","token","user","logged","action","type","Object","objectSpread","data","spinner","toggle","toggleSpin","rootReducer","history","combineReducers","i18n","i18nReducer","router","connectRouter","createBrowserHistory","middleware","thunkMiddleware","translationsObject","en","application","title","hello","bad","poor","average","good","excellent","describetion","logout","send","vietnamese","english","comment","success","fail","confirmSend","product","date","long","export","export_0","export_1","two_lines","literal_two_lines","vn","Header","componentDidMount","console","log","react_default","a","createElement","className","src","comayLogo","alt","build","value","Component","routes","Variable","renderUrl","url","endpoint","endpointCmcard","endpointCmcbs","endpointCmlink","GraphqlServices","fetchToServer","_callee","query","graphqlClient","_args","regenerator_default","wrap","_context","prev","next","localStorage","getItem","abrupt","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","response","json","responseJson","catch","error","errors","stop","request","_callee2","result","_args2","_context2","sent","t0","mutate","_callee3","mutation","_args3","_context3","Api","login","email","password","LOGIN","concat","getProducts","partnerId","SHOW_PRODUCT","sendRateData","productId","userId","SEND_RATE","setStatusLogged","statusLogged","setUserData","Home","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getProductsFromServer","dataLogin","parse","directToOtherPage","asyncToGenerator","mark","show_products","id","name","setState","products","activeProduct","handleClickTab","item","activeRate","comments","handleClickRate","resetRate","handleClickSend","_ref3","callToggleSpinner","showAlert","titleAlert","typeAlert","setTimeout","showModal","visibleModal","rates","initData","_this2","map","idx","key","onClick","imgSrc","avd","excell","header_Header","style","fontWeight","maxWidth","minWidth","width","onChange","event","target","es_alert","message","e","changeLang","removeItem","replace","modal","visible","onOk","onCancel","okText","cancelText","connect","dispatch","page","push","toggleSpinner","lang","setLocale","link","TextInput","handleOnChangeValue","evt","validateField","fieldName","errorReason","valid","test","emailValid","passwordValid","placeholder","holder","onBlur","ref","_input","Fragment","__DEV__","Login","componentWillMount","_ref2","setItem","handleSubmit","preventDefault","handleInputChange","defineProperty","redirectToReferrer","onSubmit","textInput_TextInput","QrCodeReader","handleScan","handleError","err","lib_default","delay","onError","onScan","Spinner","spin","PureComponent","store","preloadedState","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","apply","routerMiddleware","syncTranslationWithStore","loadTranslations","configureStore","ReactDOM","render","react_redux_es","src_components_spinner","esm","Switch","Route","exact","path","home_home","qrCodeReader_QrCodeReader","login_login","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3b022b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.4be3f8be.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8c0b4eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/3.0debeb45.png\";","module.exports = __webpack_public_path__ + \"static/media/4.70d9f588.png\";","module.exports = __webpack_public_path__ + \"static/media/5.6a5fbc95.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ActionTypes = {\n  SET_USER_DATA: \"SET_USER_DATA\",\n  SET_STATUS_LOGGED: \"SET_STATUS_LOGGED\",\n  TOGGLE_SPINNER: \"TOGGLE_SPINNER\"\n};\nexport default ActionTypes;\n","import ActionTypes from \"../constants/ActionTypes\";\nconst userData = (\n  state = {\n    token: \"\",\n    user: {},\n    logged: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.SET_USER_DATA:\n      return {\n        ...state,\n        user: action.data\n      };\n    case ActionTypes.SET_STATUS_LOGGED:\n      return {\n        ...state,\n        logged: action.logged\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userData;\n","import ActionTypes from \"../constants/ActionTypes\";\nconst spinner = (\n  state = {\n    toggle: false\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_SPINNER:\n      return {\n        ...state,\n        toggle: action.toggleSpin\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default spinner;\n","import { combineReducers } from \"redux\";\nimport {\n  loadTranslations,\n  setLocale,\n  syncTranslationWithStore,\n  i18nReducer\n} from \"react-redux-i18n\";\n\nimport userData from \"./UserData\";\nimport { connectRouter } from \"connected-react-router\";\nimport spinner from \"./Spinner\";\n\nconst rootReducer = history =>\n  combineReducers({\n    userData: userData,\n    spinner: spinner,\n    i18n: i18nReducer,\n    router: connectRouter(history)\n  });\n\nexport default rootReducer;\n","import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers/Reducers\";\n\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  loadTranslations,\n  setLocale,\n  syncTranslationWithStore\n} from \"react-redux-i18n\";\n\nexport const history = createBrowserHistory();\nconst middleware = [thunkMiddleware];\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger());\n}\n\nconst translationsObject = {\n  en: {\n    application: {\n      title: \"Awesome app with i18n!\",\n      hello: \"Hello, %{name}!\",\n      bad: \"Bad\",\n      poor: \"Poor\",\n      average: \"Average\",\n      good: \"Good\",\n      excellent: \"Excellent\",\n      describetion: \"Please take a moment to review your experience with us\",\n      logout: \"Log out\",\n      send: \"Send\",\n      vietnamese: \"Vietnamese\",\n      english: \"English\",\n      comment: \"Comment\",\n      success: \"Success\",\n      fail: \"Fail\",\n      confirmSend: \"Are you sure?\",\n      product: \"Product\"\n    },\n    date: {\n      long: \"MMMM Do, YYYY\"\n    },\n    export: \"Export %{count} items\",\n    export_0: \"Nothing to export\",\n    export_1: \"Export %{count} item\",\n    two_lines: \"Line 1<br />Line 2\",\n    literal_two_lines: \"Line 1\\\nLine 2\"\n  },\n  vn: {\n    application: {\n      title: \"XIN CHAO\",\n      hello: \"Xin chào, %{name}!\",\n      bad: \"Rất Tệ\",\n      poor: \"Tệ\",\n      average: \"Trung bình\",\n      good: \"Tốt\",\n      excellent: \"Xuất sắc\",\n      describetion:\n        \"Vui lòng để lại nhận xét về trải nghiệm của bạn với chúng tôi\",\n      logout: \"Đăng xuất\",\n      send: \"Gửi\",\n      vietnamese: \"Tiếng việt\",\n      english: \"Tiếng Anh\",\n      comment: \"Nhận xét\",\n      success: \"Thành công\",\n      fail: \"Thất bại\",\n      confirmSend: \"Bạn xác nhận gửi?\",\n      product: \"Sản phẩm\"\n    },\n    date: {\n      long: \"D MMMM YYYY\"\n    },\n    export: \"Exporteer %{count} dingen\",\n    export_0: \"Niks te exporteren\",\n    export_1: \"Exporteer %{count} ding\",\n    two_lines: \"Regel 1<br />Regel 2\",\n    literal_two_lines: \"Regel 1\\\nRegel 2\"\n  }\n};\nexport default function configureStore(preloadedState) {\n  const composeEnhancer =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancer(applyMiddleware(...middleware, routerMiddleware(history)))\n  );\n\n  syncTranslationWithStore(store);\n  store.dispatch(loadTranslations(translationsObject));\n  store.dispatch(setLocale(\"en\"));\n\n  return store;\n}\n","import React, { Component } from \"react\";\nimport \"./header.scss\";\nimport { Icon } from \"antd\";\nimport comayLogo from \"../../assets/images/comay_logo.png\";\nimport { Translate } from \"react-redux-i18n\";\n\nexport default class Header extends Component {\n  componentDidMount = () => {\n    console.log(\"WWWWWW\", window.history);\n  };\n\n  render() {\n    return (\n      <div className=\"custom-header\">\n        <header>\n          <img src={comayLogo} alt=\"logo\" className=\"header-logo\" />\n        </header>\n        <h1 className=\"company-name\">Cỏ may smile</h1>\n        <p>\n          <Translate value=\"application.describetion\" />\n        </p>\n      </div>\n    );\n  }\n}\n","export default {\n  // PRODUCTION\n  HostGraphql: \"https://comaycard.com/graphql\",\n  // HostGraphql: \" http://192.168.1.74:8080/graphql\",\n\n  // Login\n  Login: \"/api/login\",\n  RefreshToken: \"/api/refresh\",\n\n  // Get user qr code\n  UserQRCode: \"/api/cmcard/v1/qrcode\",\n\n  // Get user card\n  UserCard: \"/api/cmcard/v1/card\",\n  UserPoint: \"/api/cmcard/v1/points\",\n\n  // Messages\n  Cmcard: \"/cmcard\",\n  Cmcbs: \"/cmcbs\",\n  Cmlink: \"/cmlink\"\n};\n","// List of constant navigation.\nexport default {\n  BT_ACTION_SETTLEMENT: \"BT_ACTION_SETTLEMENT\",\n  API_CMACARD: \"API_CMACARD\",\n  API_CMACBS: \"API_CMACBS\",\n  API_CMLINK: \"API_CMLINK\"\n};\n","import routes from \"./routes\";\n// import AsyncUtils, { Keys } from \"src/utils/AsyncUtils\";\n// import NetInfo from \"@react-native-community/netinfo\";\nimport Variable from \"../constants/Variable\";\nexport const baseURL = () => {\n  return routes.HostGraphql;\n};\n\nexport const renderUrl = url => {\n  return baseURL() + url;\n};\n\nconst endpoint = renderUrl(\"\");\n\nconst endpointCmcard = renderUrl(routes.Cmcard);\nconst endpointCmcbs = renderUrl(routes.Cmcbs);\nconst endpointCmlink = renderUrl(routes.Cmlink);\n\nconsole.log(\"endpointCmcard\", endpointCmcard);\nconsole.log(\"endpointCmcard\", endpointCmcbs);\n\nexport default class GraphqlServices {\n  static fetchToServer = async (query, type = \"\") => {\n    console.log(\"***** fetchToServer\", type);\n    let token = localStorage.getItem(\"token\");\n    let graphqlClient = endpoint;\n    if (type === Variable.API_CMACARD) {\n      graphqlClient = endpointCmcard;\n    } else if (type === Variable.API_CMACBS) {\n      graphqlClient = endpointCmcbs;\n    } else if (type === Variable.API_CMLINK) {\n      graphqlClient = endpointCmlink;\n    } else {\n      token = \"\";\n    }\n    const isConnect = true;\n    console.log(\"isconnnnnn\", isConnect);\n    if (!isConnect) {\n      return { data: null, errors: \"No connected\" };\n    }\n    return fetch(graphqlClient, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        token: token\n      },\n      body: JSON.stringify({\n        query: query\n      })\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        console.log(\"postRegistTokenToServer : \" + responseJson);\n        return responseJson;\n      })\n      .catch(error => {\n        console.error(\"Erorr grap service\", query, error);\n        return { data: null, errors: error };\n      });\n  };\n  /**\n   * The request to server by GraphQl\n   */\n  static request = async (query /*, variables*/, type = \"\") => {\n    try {\n      const result = await this.fetchToServer(query, type);\n      return result;\n    } catch (error) {\n      console.log(\"error Services: \", error);\n      throw error;\n    }\n  };\n\n  static mutate = async (mutation, type = \"\") => {\n    try {\n      const result = await this.fetchToServer(mutation, type);\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n","import GraphqlServices from \"./services\";\nimport Variable from \"../constants/Variable\";\n\nexport default class Api {\n  static login = async (email, password) => {\n    try {\n      const LOGIN = `\n      {\n        login(login: \"${email}\", password: \"${password}\") {\n          id\n          first_name\n          last_name\n          email\n          login\n          token\n        }\n      }`;\n\n      const result = await GraphqlServices.request(LOGIN);\n      // const result = await request(LOGIN);\n\n      return result;\n    } catch (error) {\n      console.log(\"Err graph\", error);\n      throw error;\n    }\n  };\n\n  static getProducts = async partnerId => {\n    console.log(\"APIII PRODUCT partnerId\", partnerId);\n    try {\n      const SHOW_PRODUCT = `\n        {\n          show_products(by_partner_id: ${partnerId})\n          {\n            name\n            code\n            pcategory_name\n            price\n            points\n            by_partner\n          }\n        }\n      `;\n\n      const result = await GraphqlServices.request(\n        SHOW_PRODUCT,\n        Variable.API_CMACARD\n      );\n      return result;\n    } catch (error) {\n      console.log(\"Err graph\", error);\n      throw error;\n    }\n  };\n\n  static sendRateData = async (productId, value, userId, comment) => {\n    try {\n      const SEND_RATE = `\n          mutation {\n            rating(product_id: ${productId}, value: ${value}, created_by: ${userId}, comment: \"${comment}\") {\n              id\n            }\n          }\n        \n      `;\n      console.log(\"APIII sendRateData\", SEND_RATE);\n\n      const result = await GraphqlServices.mutate(\n        SEND_RATE,\n        Variable.API_CMLINK\n      );\n      console.log(\"APIII sendRateData REEEEEESSSS\", result);\n\n      return result;\n    } catch (error) {\n      console.log(\"Err graph\", error);\n      throw error;\n    }\n  };\n}\n","import ActionTypes from \"../constants/ActionTypes\";\n\nexport const toggleSlideMenu = () => ({\n  type: ActionTypes.TOGGLE_SLIDE_MENU\n});\n\nexport const VisibilityMenuClass = {\n  SHOW_MENU: \"slide-left\",\n  CLOSE_MENU: \"close_menu\"\n};\n\nexport const toggleSpinner = toggleSpin => ({\n  type: ActionTypes.TOGGLE_SPINNER,\n  toggleSpin: toggleSpin\n});\n","import ActionTypes from \"../constants/ActionTypes\";\n\nexport const setStatusLogged = statusLogged => ({\n  type: ActionTypes.SET_STATUS_LOGGED,\n  logged: statusLogged\n});\n\nexport const setUserData = userData => ({\n  type: ActionTypes.SET_USER_DATA,\n  data: userData\n});\n","import React, { Component } from \"react\";\nimport { push, replace } from \"connected-react-router\";\nimport { connect } from \"react-redux\";\nimport bad from \"../../assets/images/1.png\";\nimport poor from \"../../assets/images/2.png\";\nimport avd from \"../../assets/images/3.png\";\nimport good from \"../../assets/images/4.png\";\nimport excell from \"../../assets/images/5.png\";\n\nimport \"./home.scss\";\nimport Header from \"../../components/header/header\";\nimport \"antd/dist/antd.css\";\nimport Api from \"../../apis/api\";\nimport { toggleSpinner } from \"../../actions/Actions\";\nimport { setLocale, Translate } from \"react-redux-i18n\";\nimport { setUserData, setStatusLogged } from \"../../actions/UserAction\";\nimport { Alert, Modal } from \"antd\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      rates: [\n        { id: 1, name: \"bad\" },\n        { id: 2, name: \"poor\" },\n        { id: 3, name: \"average\" },\n        { id: 4, name: \"good\" },\n        { id: 5, name: \"excellent\" }\n      ],\n      activeRate: null,\n      activeProduct: null,\n      initData: true,\n      comments: \"\",\n      titleAlert: \"\",\n      showAlert: false,\n      typeAlert: \"\",\n      visibleModal: false\n    };\n  }\n\n  componentDidMount = () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      if (this.props.logged) {\n      } else {\n        this.props.directToOtherPage(\"/login\");\n      }\n    } else {\n      this.getProductsFromServer();\n      let dataLogin = localStorage.getItem(\"login\");\n      dataLogin = JSON.parse(dataLogin);\n      this.props.setUserData(dataLogin);\n      this.props.setStatusLogged(true);\n    }\n  };\n\n  getProductsFromServer = async () => {\n    // const { data, errors } = await Api.getProducts(1);\n    const data = {\n      show_products: [\n        {\n          id: 5,\n          name: \"1\"\n        },\n        {\n          id: 6,\n          name: \"2\"\n        },\n        {\n          id: 7,\n          name: \"3\"\n        }\n      ]\n    };\n    if (data && data.show_products) {\n      this.setState({\n        products: data.show_products,\n        activeProduct: data.show_products[0]\n      });\n      console.log(\"getProductsFromServer\", data);\n    }\n  };\n\n  handleClickTab = item => {\n    this.setState({ activeProduct: item, activeRate: {}, comments: \"\" });\n  };\n\n  handleClickRate = item => {\n    this.setState({ activeRate: item });\n  };\n\n  resetRate = () => {\n    this.setState({\n      activeProduct: this.state.products[0],\n      activeRate: {},\n      comments: \"\"\n    });\n  };\n\n  handleClickSend = async () => {\n    if (this.state.activeRate && this.state.comments !== \"\") {\n      this.props.callToggleSpinner(true);\n      const { data, errors } = await Api.sendRateData(\n        this.state.activeProduct.id,\n        // 5,\n        this.state.activeRate.id,\n        this.props.user.id,\n        this.state.comments\n      );\n      this.props.callToggleSpinner(false);\n      if (data) {\n        this.setState({\n          showAlert: true,\n          titleAlert: \"Ok\",\n          typeAlert: \"success\"\n        });\n      } else {\n        this.setState({\n          showAlert: true,\n          titleAlert: \"Fail\",\n          typeAlert: \"error\"\n        });\n      }\n      setTimeout(() => {\n        this.setState({\n          showAlert: false\n        });\n      }, 2500);\n\n      this.resetRate();\n    }\n  };\n\n  showModal = value => {\n    this.setState({ visibleModal: value });\n  };\n\n  render() {\n    const products = this.state.products.map((item, idx) => {\n      return (\n        <div\n          className={\n            \"tab-item \" +\n            (item.id == this.state.activeProduct.id ? \"active\" : \"\")\n          }\n          key={\"tab\" + idx}\n          onClick={() => this.handleClickTab(item)}\n        >\n          <p>\n            <Translate value=\"application.product\" /> {item.name}\n          </p>\n        </div>\n      );\n    });\n\n    const rates = this.state.rates.map((item, idx) => {\n      let imgSrc;\n      if (item.id === 1) {\n        imgSrc = bad;\n      } else if (item.id === 2) {\n        imgSrc = poor;\n      } else if (item.id === 3) {\n        imgSrc = avd;\n      } else if (item.id === 4) {\n        imgSrc = good;\n      } else if (item.id === 5) {\n        imgSrc = excell;\n      }\n      const name = \"application.\" + item.name;\n      return (\n        <div\n          className={\n            \"rate-item \" +\n            (this.state.activeRate && item.id === this.state.activeRate.id\n              ? \"active\"\n              : \"\")\n          }\n          key={\"tab\" + idx}\n          onClick={() => this.handleClickRate(item)}\n        >\n          <img src={imgSrc} alt={item.name} className=\"rate-icon\" />\n          <p>\n            <Translate value={name} />\n          </p>\n        </div>\n      );\n    });\n    return (\n      <div className=\"page-home\">\n        <Header title=\"Vui lòng chọn tính năng\" />\n        <div className=\"tab-products\">{products}</div>\n        <div className=\"rate-product\">{rates}</div>\n        <div className=\"comments\">\n          <span\n            style={{\n              fontWeight: \"bold\",\n              maxWidth: \"100px\",\n              minWidth: \"100px\",\n              width: \"100px\"\n            }}\n          >\n            <Translate value=\"application.comment\" />:\n          </span>{\" \"}\n          <input\n            className=\"comment-input\"\n            value={this.state.comments}\n            onChange={event => {\n              this.setState({ comments: event.target.value });\n            }}\n          />\n        </div>\n        {this.state.showAlert && (\n          <Alert message={this.state.titleAlert} type={this.state.typeAlert} />\n        )}\n        <button\n          className={\n            \"submit \" +\n            (this.state.activeRate && this.state.comments !== \"\"\n              ? \"\"\n              : \"disabled\")\n          }\n          onClick={e => {\n            // this.handleClickSend();\n            if (this.state.activeRate && this.state.comments !== \"\") {\n              this.showModal(true);\n            }\n          }}\n        >\n          <Translate value=\"application.send\" />\n        </button>\n\n        {/* Change lang */}\n\n        {/*  */}\n        <div className=\"footer\">\n          {/* {this.props.user && this.props.user.first_name && (\n            <Translate\n              value=\"application.hello\"\n              name={this.props.user && this.props.user.first_name}\n            />\n          )} */}\n\n          <button\n            onClick={e => {\n              this.props.changeLang(\"en\");\n            }}\n          >\n            <Translate value=\"application.english\" />\n          </button>\n          <button\n            onClick={e => {\n              this.props.changeLang(\"vn\");\n            }}\n          >\n            <Translate value=\"application.vietnamese\" />\n          </button>\n          <div>\n            <button\n              onClick={e => {\n                this.props.setStatusLogged(false);\n                this.props.setUserData({});\n                localStorage.removeItem(\"token\");\n                localStorage.removeItem(\"login\");\n                setTimeout(() => {\n                  this.props.replace(\"/login\");\n                }, 400);\n              }}\n            >\n              <Translate value=\"application.logout\" />\n            </button>\n          </div>\n        </div>\n\n        <Modal\n          // title=\"Modal\"\n          visible={this.state.visibleModal}\n          onOk={() => {\n            this.setState({\n              visibleModal: false\n            });\n            this.handleClickSend();\n          }}\n          onCancel={() => this.showModal(false)}\n          okText=\"OK\"\n          cancelText=\"Cancle\"\n        >\n          <p>\n            <Translate value=\"application.confirmSend\" />\n          </p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  logged: state.userData.logged,\n  user: state.userData.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  directToOtherPage: page => {\n    dispatch(push(page));\n  },\n  callToggleSpinner: toggleSpin => {\n    dispatch(toggleSpinner(toggleSpin));\n  },\n  changeLang: lang => {\n    dispatch(setLocale(lang));\n  },\n  setUserData: userData => {\n    dispatch(setUserData(userData));\n  },\n  setStatusLogged: statusLogged => {\n    dispatch(setStatusLogged(statusLogged));\n  },\n  replace: link => {\n    dispatch(replace(link));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React, { Component } from \"react\";\nimport \"./textInput.scss\";\n/**\n * type: email, password\n */\nexport default class TextInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value || \"\",\n      emailValid: false,\n      passwordValid: false,\n      errorReason: \"\",\n      valid: true\n    };\n    console.log(\"TTTT\", this.props);\n  }\n  get value() {\n    return this.state.value;\n  }\n\n  get valid() {\n    return this.state.valid;\n  }\n\n  handleOnChangeValue = evt => {\n    const value = evt.target.value;\n    this.setState({ value: value }, () => {\n      if (value.length === 0) {\n        this.validateField(this.props.type, value);\n      }\n    });\n  };\n\n  validateField = (fieldName, value) => {\n    let errorReason = this.state.errorReason;\n    let valid = this.state.valid;\n    switch (fieldName) {\n      case \"email\":\n        let patternEmail = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n        if (value.length === 0) {\n          errorReason = \"\";\n          valid = true;\n        } else {\n          valid = patternEmail.test(value);\n        }\n        errorReason = valid ? \"\" : \" is invalid\";\n        break;\n      case \"password\":\n        valid = value.length >= 6;\n        errorReason = valid ? \"\" : \" is too short\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      errorReason: errorReason,\n      valid: valid\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-text-input\">\n        <input\n          type={this.props.type}\n          placeholder={this.props.holder}\n          onChange={this.handleOnChangeValue}\n          onBlur={() => {\n            this.validateField(this.props.type, this.state.value);\n          }}\n          ref={ref => (this._input = ref)}\n          value={this.state.value}\n        />\n        {!this.state.valid ? (\n          <p className=\"invalid-input\">{this.state.errorReason} </p>\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Api from \"../../apis/api\";\nimport comayLogo from \"../../assets/images/comay_logo.png\";\nimport \"./login.scss\";\nimport { push, replace } from \"connected-react-router\";\nimport { setUserData, setStatusLogged } from \"../../actions/UserAction\";\nimport { connect } from \"react-redux\";\nimport TextInput from \"../../components/textInput/textInput\";\n\nconst __DEV__ = true;\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: __DEV__ ? \"thu.huynh@cma.com.vn\" : undefined,\n      password: __DEV__ ? \"cmacmacma\" : undefined,\n      redirectToReferrer: false\n    };\n    console.log(\"PROOOO\", props);\n  }\n  componentWillMount = () => {\n    if (this.props.logged) {\n      this.props.replace(\"/\");\n    }\n  };\n\n  login = async () => {\n    if (this.email.value && this.password.value) {\n      const { data, errors } = await Api.login(\n        this.email.value,\n        this.password.value\n      );\n      console.log(\"result\", data);\n      if (data) {\n        localStorage.setItem(\"token\", data.login.token);\n        this.props.setUserData(data.login);\n        this.props.setStatusLogged(true);\n        this.props.replace(\"/\");\n        const dataLogin = JSON.stringify(data.login);\n        localStorage.setItem(\"login\", dataLogin);\n      }\n    }\n    // Dev\n\n    // const data = rs;\n    // this.props.setStatusLogged(true);\n    // this.props.push(\"/\");\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.email.valid && this.password.valid) {\n      this.login();\n    }\n  };\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n  componentDidMount = () => {\n    console.log(\"Ppppppp\", this.props);\n  };\n\n  render() {\n    return (\n      <div className=\"page-login\">\n        <img src={comayLogo} alt=\"logo\" className=\"logo\" />\n\n        <form onSubmit={this.handleSubmit} className=\"form-login\">\n          {/* <input\n            name=\"email\"\n            type=\"email\"\n            value={this.state.email}\n            onChange={this.handleInputChange}\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handleInputChange}\n          /> */}\n          <div className=\"form-item\">\n            <TextInput\n              ref={ref => (this.email = ref)}\n              type=\"email\"\n              placeholder=\"email\"\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"form-item\">\n            <TextInput\n              ref={ref => (this.password = ref)}\n              type=\"password\"\n              placeholder=\"password\"\n              value={this.state.password}\n            />\n          </div>\n\n          <button type=\"submit\">Đăng nhập</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  logged: state.userData.logged,\n  user: state.userData.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setUserData: userData => {\n    dispatch(setUserData(userData));\n  },\n  setStatusLogged: statusLogged => {\n    dispatch(setStatusLogged(statusLogged));\n  },\n  push: link => {\n    dispatch(push(link));\n  },\n  replace: link => {\n    dispatch(replace(link));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport Header from \"../../components/header/header\";\n\nexport default class QrCodeReader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"No result\"\n    };\n  }\n\n  handleScan = data => {\n    if (data) {\n      this.setState({\n        result: data\n      });\n    }\n  };\n  handleError = err => {\n    console.error(err);\n  };\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Chuyển điểm\" />\n        <QrReader\n          delay={300}\n          onError={this.handleError}\n          onScan={this.handleScan}\n          style={{ width: \"100%\" }}\n        />\n        <p>{this.state.result}</p>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Modal, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport \"./spinner.scss\";\nclass Spinner extends PureComponent {\n  render() {\n    return (\n      <div\n        className={\"spinner \" + (this.props.toggleSpin ? \"visible\" : \"hidden\")}\n      >\n        {/* <Modal\n          visible={this.props.toggleSpin}\n          maskClosable={false}\n          footer={null}\n          closable={false}\n          bodyStyle={{ background: \"rgba(0, 0, 0, 0.65)\" }}\n        >\n        </Modal> */}\n        <div className=\"spinner-body\">\n          <Spin />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  toggleSpin: state.spinner.toggle\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   toggleSpin: () => {\n//       dispatch(toggleSlideMenu())\n//   }\n// })\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Spinner);\n","import * as serviceWorker from \"./serviceWorker\";\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.scss\";\n\n// #######################\nimport configureStore, { history } from \"./configureStore\";\nimport { Route, Switch } from \"react-router\"; // react-router v4\nimport { ConnectedRouter } from \"connected-react-router\";\nimport Home from \"./pages/home/home\";\nimport Login from \"./pages/login/login\";\nimport QrCodeReader from \"./pages/qrCodeReader/qrCodeReader\";\nimport Spinner from \"./components/spinner\";\n// #######################\n\nconst middleware = [thunkMiddleware];\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger());\n}\n// const store = createStore(rootReducer, applyMiddleware(...middleware));\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <App /> */}\n    {/* <App history={history} /> */}\n    <Spinner />\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Home />} />\n        <Route exact path=\"/qr-reader\" render={() => <QrCodeReader />} />\n\n        <Route exact path=\"/login\" render={() => <Login />} />\n\n        <Route render={() => <div>Miss</div>} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/comay_logo.53d39311.png\";"],"sourceRoot":""}